{"version":3,"file":"static/js/602.33cffc7b.chunk.js","mappings":"iPAIe,SAASA,IAEpB,OAA0BC,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WAEFF,IAAWG,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GACrCN,EAASM,QAIlB,CAACL,KAGA,8BACKF,IACG,4BACI,0BACI,gBACIQ,MAAM,MACNC,IAAG,yCAAoCT,EAAMU,aAC7CC,IAAKX,EAAMY,oBAGnB,4BACI,wBAAMZ,EAAMa,OAASb,EAAMc,QAC3B,0BACI,yCADJ,IAC0Bd,EAAMe,iBAEhC,0BACI,uCADJ,IACwBf,EAAMgB,iBAE9B,0BACI,mCAAe,IACdhB,EAAMiB,OAAOC,KAAI,SAAAC,GAAI,OAAIA,EAAKL,QAAMM,KAAK,WAE9C,0BACI,oCADJ,IACqBpB,EAAMqB,QAD3B,YAGA,wBACI,wCAEJ,uBAAKrB,EAAMsB,eAIf,mBACA,4BACI,SAAC,KAAD,CAASC,GAAG,OAAZ,mBACA,SAAC,KAAD,CAASA,GAAG,UAAZ,yBAEJ,mBAEA,SAAC,KAAD,CAAQC,QAAStB,W,0MCxD/BuB,EAAM,mCACNC,EAAW,gCAIV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,IAAAA,IAAA,UAAaF,EAAb,uCAAoDD,EAApD,sBAFpB,cAEGI,EAFH,yBAGIA,EAAStB,KAAKuB,SAHlB,gCAKDC,QAAQC,IAAI,KAAMC,SALjB,gFAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,gGAEoBP,IAAAA,IAAA,UAAaF,EAAb,gCAA6CD,EAA7C,kBAA0DU,EAA1D,sBAFpB,cAEGN,EAFH,yBAGMA,EAAStB,MAHf,gCAKDwB,QAAQC,IAAI,KAAMC,SALjB,gFAUA,SAAe5B,EAAtB,+CAAO,OAAP,oBAAO,WAA+B+B,GAA/B,gGAEoBR,IAAAA,IAAA,UAAaF,EAAb,iBAA8BU,EAA9B,oBAA4CX,EAA5C,sBAFpB,cAEGI,EAFH,yBAGIA,EAAStB,MAHb,gCAKDwB,QAAQC,IAAI,KAAMC,SALjB,gFAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,gGAEoBR,IAAAA,IAAA,UAAaF,EAAb,iBAA8BU,EAA9B,4BAAoDX,EAApD,sBAFpB,cAEGI,EAFH,yBAGIA,EAAStB,MAHb,gCAKDwB,QAAQC,IAAI,KAAMC,SALjB,gFAUA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,gGAEoBR,IAAAA,IAAA,UAAaF,EAAb,iBAA8BU,EAA9B,4BAAoDX,EAApD,sBAFpB,cAEGI,EAFH,yBAGIA,EAAStB,MAHb,gCAKDwB,QAAQC,IAAI,KAAMC,SALjB","sources":["pages/MovieDetailsPage.jsx","servises/Api.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams, Outlet, NavLink } from 'react-router-dom';\nimport { getMovieDetails } from \"../servises/Api\";\n\nexport default function MovieDetailsPage() {\n\n    const [movie, setMovie] = useState();\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        (() => {\n            movieId && getMovieDetails(movieId).then(data => {\n                setMovie(data);\n            });\n             \n        })();\n    }, [movieId]);\n\n    return (\n        <>\n            {movie && (\n                <div>\n                    <div>\n                        <img\n                            width=\"300\"\n                            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                            alt={movie.original_title}\n                        />\n                    </div>\n                    <div>\n                        <h2 >{movie.title || movie.name}</h2>\n                        <p >\n                            <b>Release date:</b> {movie.release_date}\n                        </p>\n                        <p >\n                            <b>User Score:</b> {movie.vote_average}\n                        </p>\n                        <p >\n                            <b>Genres:</b>{' '}\n                            {movie.genres.map(genr => genr.name).join(' / ')}\n                        </p>\n                        <p >\n                            <b>Runtime:</b> {movie.runtime} min.\n                        </p>\n                        <p>\n                            <b>Overview:</b>\n                        </p>\n                        <p >{movie.overview}</p>\n                        \n             \n                    </div>\n                    <hr />\n                    <nav >\n                        <NavLink to=\"cast\">Cast</NavLink>\n                        <NavLink to=\"reviews\">Reviews</NavLink>\n                    </nav>\n                    <hr />\n\n                    <Outlet context={movieId} />\n                </div>\n                \n            )}\n        </>\n    );\n};\n\n\n\n","import axios from \"axios\";\n\nconst KEY = '2ca840a255afc3da30ab5f6fe1a7340a';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n\n\nexport async function getPopularMovie() {\n  try {\n    const responce = await axios.get(`${BASE_URL}trending/movie/week?api_key=${KEY}&language='en-US'`);\n    return responce.data.results;\n  } catch (error) {\n      console.log(error.message);\n  }\n};\n\n\nexport async function getSearchMovie(query) {\n  try {\n    const responce = await axios.get(`${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language='en-US'`);\n      return responce.data;\n    } catch (error) {\n      console.log(error.message);\n  }\n};\n\n\nexport async function getMovieDetails(id) {\n  try {\n    const responce = await axios.get(`${BASE_URL}movie/${id}?api_key=${KEY}&language='en-US'`);\n    return responce.data;\n  } catch (error) {\n      console.log(error.message);\n  }\n};\n\n\nexport async function getMovieCast(id) {\n  try {\n    const responce = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${KEY}&language='en-US'`);\n    return responce.data;\n  } catch (error) {\n      console.log(error.message);\n  }\n};\n\n\nexport async function getMovieReviews(id) {\n  try {\n    const responce = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language='en-US'`);\n    return responce.data;\n  } catch (error) {\n      console.log(error.message);\n  }\n};\n\n\n\n"],"names":["MovieDetailsPage","useState","movie","setMovie","movieId","useParams","useEffect","getMovieDetails","then","data","width","src","poster_path","alt","original_title","title","name","release_date","vote_average","genres","map","genr","join","runtime","overview","to","context","KEY","BASE_URL","getPopularMovie","axios","responce","results","console","log","message","getSearchMovie","query","id","getMovieCast","getMovieReviews"],"sourceRoot":""}