{"version":3,"file":"static/js/797.55bd3b76.chunk.js","mappings":"uMAGe,SAASA,EAAT,GAAiC,IAAVC,EAAS,EAATA,MAC9BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAMG,KAAI,SAAAC,GAAI,OACb,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAA/C,WACE,uBAAIG,EAAKK,kBACP,gBACEC,OAAO,MACPC,IAAG,yCAAoCP,EAAKQ,aAC5CC,IAAKT,EAAKU,YANTV,EAAKE,W,yICFP,SAASS,IACpB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOhB,EAAP,KAAcmB,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEIC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WAGNF,IAASG,EAAAA,EAAAA,IAAeH,GAAOI,MAAK,SAAAC,GAClCC,QAAQC,IAAIF,EAAKG,SACc,IAAxBH,EAAKG,QAAQC,QACjBC,EAAAA,GAAAA,QAAA,mCAEHd,EAASS,EAAKG,cAIjB,CAACR,IAgBJ,OACE,0BACE,6BACE,kBAAMW,SAbW,SAAAC,GACrBA,EAAMC,iBACkB,KAAjBnB,EAAMoB,QAIbf,EAAgB,CAAEC,MAAON,IACzBC,EAAS,KAJHe,EAAAA,GAAAA,MAAY,kCAUd,WACE,kBAAOK,KAAK,OAAOC,SAlBJ,SAAAJ,GACrBjB,EAASiB,EAAMK,OAAOvB,QAiB6BA,MAAOA,KACpD,mBAAQqB,KAAK,SAAb,uBAEDtC,IAAS,SAAC,IAAD,CAAYA,MAAOA,W,0MC9C/ByC,EAAM,mCACNC,EAAW,gCAIV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,IAAAA,IAAA,UAAaF,EAAb,uCAAoDD,EAApD,sBAFpB,cAEGI,EAFH,yBAGIA,EAASjB,KAAKG,SAHlB,gCAKDF,QAAQC,IAAI,KAAMgB,SALjB,gFAUA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,gGAEoBqB,IAAAA,IAAA,UAAaF,EAAb,gCAA6CD,EAA7C,kBAA0DlB,EAA1D,sBAFpB,cAEGsB,EAFH,yBAGMA,EAASjB,MAHf,gCAKDC,QAAQC,IAAI,KAAMgB,SALjB,gFAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BzC,GAA/B,gGAEoBsC,IAAAA,IAAA,UAAaF,EAAb,iBAA8BpC,EAA9B,oBAA4CmC,EAA5C,sBAFpB,cAEGI,EAFH,yBAGIA,EAASjB,MAHb,gCAKDC,QAAQC,IAAI,KAAMgB,SALjB,gFAUA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA4B1C,GAA5B,gGAEoBsC,IAAAA,IAAA,UAAaF,EAAb,iBAA8BpC,EAA9B,4BAAoDmC,EAApD,sBAFpB,cAEGI,EAFH,yBAGIA,EAASjB,MAHb,gCAKDC,QAAQC,IAAI,KAAMgB,SALjB,gFAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+B3C,GAA/B,gGAEoBsC,IAAAA,IAAA,UAAaF,EAAb,iBAA8BpC,EAA9B,4BAAoDmC,EAApD,sBAFpB,cAEGI,EAFH,yBAGIA,EAASjB,MAHb,gCAKDC,QAAQC,IAAI,KAAMgB,SALjB","sources":["components/MoviesList/MoviesList.jsx","pages/MoviesPage.jsx","servises/Api.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\n\nexport default function MoviesList ({ films }) {\n  const location = useLocation();\n  return (\n    <ul>\n      {films.map(film => (\n        <li key={film.id}>\n          <Link to={`/movies/${film.id}`} state={{ from: location }}>\n            <p>{film.original_title}</p>\n              <img\n                height=\"150\"\n                src={`https://image.tmdb.org/t/p/w500${film.poster_path}`}\n                alt={film.title}\n            />\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getSearchMovie } from \"../servises/Api\";\nimport {  toast } from 'react-toastify';\nimport MoviesList from \"components/MoviesList/MoviesList\";\n\nexport default function Movies() {\n    const [value, setValue] = useState('');\n    const [films, setFilms] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    (() => {\n           \n      query && getSearchMovie(query).then(data => {\n        console.log(data.results)\n           if (data.results.length === 0) {\n           toast.warning(`Movie with this name not found!`);\n        };\n        setFilms(data.results)\n      \n        });\n     })();\n  }, [query]);\n\n  const onHandleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const onHandleSubmit = event => {\n    event.preventDefault();\n       if (value.trim() === \"\") {\n          toast.error(\"Enter a search value, please!\");\n          return;\n    };\n    setSearchParams({ query: value });\n    setValue('');\n  };\n\n  return (\n    <div>\n      <main>\n        <form onSubmit={onHandleSubmit}>\n          <input type=\"text\" onChange={onHandleChange} value={value} />\n          <button type=\"submit\">Search</button>\n        </form>\n        {films && <MoviesList films={films} />}\n      </main>\n    </div>\n  );\n}\n\n   ","import axios from \"axios\";\n\nconst KEY = '2ca840a255afc3da30ab5f6fe1a7340a';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n\n\nexport async function getPopularMovie() {\n  try {\n    const responce = await axios.get(`${BASE_URL}trending/movie/week?api_key=${KEY}&language='en-US'`);\n    return responce.data.results;\n  } catch (error) {\n      console.log(error.message);\n  }\n};\n\n\nexport async function getSearchMovie(query) {\n  try {\n    const responce = await axios.get(`${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language='en-US'`);\n      return responce.data;\n    } catch (error) {\n      console.log(error.message);\n  }\n};\n\n\nexport async function getMovieDetails(id) {\n  try {\n    const responce = await axios.get(`${BASE_URL}movie/${id}?api_key=${KEY}&language='en-US'`);\n    return responce.data;\n  } catch (error) {\n      console.log(error.message);\n  }\n};\n\n\nexport async function getMovieCast(id) {\n  try {\n    const responce = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${KEY}&language='en-US'`);\n    return responce.data;\n  } catch (error) {\n      console.log(error.message);\n  }\n};\n\n\nexport async function getMovieReviews(id) {\n  try {\n    const responce = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language='en-US'`);\n    return responce.data;\n  } catch (error) {\n      console.log(error.message);\n  }\n};\n\n\n\n"],"names":["MoviesList","films","location","useLocation","map","film","to","id","state","from","original_title","height","src","poster_path","alt","title","Movies","useState","value","setValue","setFilms","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getSearchMovie","then","data","console","log","results","length","toast","onSubmit","event","preventDefault","trim","type","onChange","target","KEY","BASE_URL","getPopularMovie","axios","responce","message","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}